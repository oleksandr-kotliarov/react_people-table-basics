{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Nav/Navbar.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","memo","className","Navbar","role","isActive","cn","to","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","sex","slug","name","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","hasError","setHasError","selectedSlug","useParams","useEffect","peopleFromServer","preparedPeople","map","mother","find","motherName","father","fatherName","catch","finally","length","born","died","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dd04e50c.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\nexport const HomePage: FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import cn from 'classnames';\nimport { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: FC = memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n));\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import cn from 'classnames';\nimport { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = memo(({ person }) => (\n  <Link\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n    to={`/people/${person.slug}`}\n  >\n    {person.name}\n  </Link>\n));\n","import {\n  FC,\n  memo,\n  useEffect,\n  useState,\n} from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeoplePage: FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const { slug: selectedSlug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setHasError(false);\n    getPeople()\n      .then(peopleFromServer => {\n        const preparedPeople = peopleFromServer.map(person => ({\n          ...person,\n          mother: peopleFromServer\n            .find(({ name }) => name === person.motherName),\n          father: peopleFromServer\n            .find(({ name }) => name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={cn(\n                      {\n                        'has-background-warning': selectedSlug === person.slug,\n                      },\n                    )}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother\n                        ? (<PersonLink person={person.mother} />)\n                        : (person.motherName || '-')}\n                    </td>\n                    <td>\n                      {person.father\n                        ? (<PersonLink person={person.father} />)\n                        : (person.fatherName || '-')}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import { Route, Routes, Navigate } from 'react-router-dom';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { Navbar } from './components/Nav/Navbar';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}